Тестовое задание для позиции Back-end Developer (Python):

Наша цель - понять, как человек выбирает решения/алгоритмы и каковы общие подходы (в том числе само понимание задачи). Описание дано неполное намеренно. Используйте, что угодно, однако мы будем оценивать ваш выбор и далеко не только с точки зрения разработки, но и обслуживаемости, поддержки, применимости для данного случая и т.д.

Ограничения:

    это должен быть Python 3.5+;
    и это должна быть микросервисная архитектура.

Веб-сервис для составления маршрутов с использованием архитектуры микросервисов:

    Безусловно, не нужно заморачиваться теорией графов, или картами - задание не об этом. Все должно быть максимально просто, чтобы показать основную идею, не более (!);
    Есть набор точек с координатами, и их название (т.е. какие-то данные), можно нагенерить случайным образом;
    Есть пользователи (редактирования не надо, но пара-тройка пользователей в сиде должна быть);
    Есть маршруты - состоят из списока точек, через которые нужно пройти-проехать и какой-то доп. информацией (пускай это будет номер маршрута - просто цифра);
    Веб-сервисом могут пользоваться только заавторизованные пользователи.

Должна быть возможность:

    посмотреть навигационные точки (допустим, для визуализации, но фильтром не заморачивайтесь);
    посмотреть маршруты (пользователи видят маршруты друг друга);
    создать новый маршрут - оптимальный - из точки А в точку Б (оптимальность можно считать самым наивным образом или вообще не считать - рандомно выбирать, но этот процесс должен происходить в правильном месте (!));
    сохранить маршрут - он индивидуальный для каждого пользователя;
    посмотреть отчет, сколько у какого пользователя маршрутов и какая общая протяженность маршрутов каждого пользователя;

Общее:

    Точки могут менять название, соответственно, старые маршруты должны это учитывать.
    Разделение сервисов - на ваше усмотрение. Данных - тоже. Выберите наилучший путь в пределах требований.
    Исходим из того, что будет 1000 запросов в секунду (эмулировать не обязательно), в базе миллион точек, а каждый маршрут состоит из от 2-х до 100-а точек (кроме исходной и пункта назначения).
    Фронт НЕ нужен - предоставьте инструкцию единого сетевого интерфейса гейтвея, естественно, с учетом авторизации.

Проверьте ваш проект на работоспособность - это очевидно. Мы должны иметь возможность его очень легко поднять у себя без танцев с бубном и выкачивания петабайтов зависимостей - т.е. должна быть инструкция или скрипт. Это задание на senior, вы сами должны понимать, что нам нужно. Желательно, чтобы под venv, но можно и docker, но тогда оно должно "просто работать".

Успехов! На задание дается 5 дней.